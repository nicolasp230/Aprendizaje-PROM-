# -*- coding: utf-8 -*-
"""Inventario repuestos Motor Workover.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FEGuNYDX_vlAxJvz7IDxNn2VAvDYUQRM
"""

import pandas as pd
import matplotlib.pyplot as plt

# Crear un DataFrame para gestionar el inventario de repuestos
inventario = pd.DataFrame(columns=['Zona', 'Repuesto', 'Cantidad'])

# Agregar repuestos iniciales al inventario para cada zona
repuestos_iniciales = [
    {'Zona': 'Meta', 'Repuesto': 'Aceite', 'Cantidad': 20},
    {'Zona': 'Meta', 'Repuesto': 'Filtro de Aire', 'Cantidad': 25},
    {'Zona': 'Meta', 'Repuesto': 'Filtro de Aceite', 'Cantidad': 30},
    {'Zona': 'Meta', 'Repuesto': 'Correa de Transmisión', 'Cantidad': 15},
    {'Zona': 'Arauca', 'Repuesto': 'Aceite', 'Cantidad': 20},
    {'Zona': 'Arauca', 'Repuesto': 'Filtro de Aire', 'Cantidad': 25},
    {'Zona': 'Arauca', 'Repuesto': 'Filtro de Aceite', 'Cantidad': 30},
    {'Zona': 'Arauca', 'Repuesto': 'Correa de Transmisión', 'Cantidad': 15},
    {'Zona': 'Huila', 'Repuesto': 'Aceite', 'Cantidad': 20},
    {'Zona': 'Huila', 'Repuesto': 'Filtro de Aire', 'Cantidad': 25},
    {'Zona': 'Huila', 'Repuesto': 'Filtro de Aceite', 'Cantidad': 30},
    {'Zona': 'Huila', 'Repuesto': 'Correa de Transmisión', 'Cantidad': 15},
]

inventario = inventario.append(repuestos_iniciales, ignore_index=True)

# Función para registrar la utilización de repuestos y verificar el inventario
def registrar_repuestos_utilizados(zona, repuesto, cantidad_utilizada):
    if repuesto in inventario[(inventario['Zona'] == zona)]['Repuesto'].values:
        inventario.loc[(inventario['Zona'] == zona) & (inventario['Repuesto'] == repuesto), 'Cantidad'] -= cantidad_utilizada
        cantidad_disponible = inventario.loc[(inventario['Zona'] == zona) & (inventario['Repuesto'] == repuesto), 'Cantidad'].values[0]
        if cantidad_disponible < 3:
            print(f"Alerta en {zona}: Quedan menos de 3 unidades de {repuesto} en inventario.")

# Función para mostrar el estado actual del inventario por zona
def mostrar_inventario_por_zona(zona):
    zona_inventario = inventario[inventario['Zona'] == zona]
    print(f"Estado actual del inventario en la zona {zona}:")
    print(zona_inventario)

# Registramos la utilización de repuestos en las zonas (simulación)
zona = 'Meta'  # Cambia la zona según corresponda
registrar_repuestos_utilizados(zona, 'Aceite', 5)
registrar_repuestos_utilizados(zona, 'Filtro de Aire', 10)

# Mostrar el estado actual del inventario por zona después de registrar la utilización
zonas = ['Meta', 'Arauca', 'Huila']
for zona in zonas:
    mostrar_inventario_por_zona(zona)

# Crear gráficas de barras para visualizar el inventario en cada zona
fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(15, 5))

for i, zona in enumerate(zonas):
    zona_inventario = inventario[inventario['Zona'] == zona]
    zona_inventario.set_index('Repuesto', inplace=True)
    zona_inventario.plot(kind='bar', ax=axes[i], y='Cantidad', legend=False)
    axes[i].set_title(f'Inventario en {zona}')
    axes[i].set_ylabel('Cantidad')
    axes[i].set_ylim(0, max(zona_inventario['Cantidad']) + 5)

plt.tight_layout()
plt.show()